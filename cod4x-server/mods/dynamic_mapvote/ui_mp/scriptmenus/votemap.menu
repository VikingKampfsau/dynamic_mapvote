#include "ui/menudefinition.h";

//Menu Size
#define VOTE_BACKGROUND_BORDER_SIZE		5

#define VOTE_RECT_WIDTH_MAX		(VOTEBUTTON_IMAGE_SIZE_X*3 + VOTEBUTTON_IMAGE_SPACE_X*2 + VOTE_BACKGROUND_BORDER_SIZE*2)
#define VOTE_RECT_HEIGHT_MAX	(VOTEBUTTON_IMAGE_SIZE_Y*3 + VOTEBUTTON_IMAGE_SPACE_Y*2 + VOTE_BACKGROUND_BORDER_SIZE*2)

#define VOTE_RECT_WIDTH			(VOTEBUTTON_IMAGE_SIZE_X*dvarInt(mapvote_columns) + VOTEBUTTON_IMAGE_SPACE_X*(dvarInt(mapvote_columns)-1) + VOTE_BACKGROUND_BORDER_SIZE*2)
#define VOTE_RECT_HEIGHT		(VOTEBUTTON_IMAGE_SIZE_Y*dvarInt(mapvote_rows) + VOTEBUTTON_IMAGE_SPACE_Y*(dvarInt(mapvote_rows)-1) + VOTE_BACKGROUND_BORDER_SIZE*2)

#define VOTE_RECT_START_X		0
#define VOTE_RECT_START_Y		0

//Timer Window
#define VOTE_TIMER_HEIGHT	32

//Vote Button		
#define VOTEBUTTON_IMAGE_SIZE_X		171
#define VOTEBUTTON_IMAGE_SIZE_Y		94

#define VOTEBUTTON_IMAGE_START_X	0
#define VOTEBUTTON_IMAGE_START_Y	0

#define VOTEBUTTON_IMAGE_SPACE_X	15
#define VOTEBUTTON_IMAGE_SPACE_Y	15

#define VOTEBUTTON_NAME_SIZE_X		(VOTEBUTTON_IMAGE_SIZE_X/2)
#define VOTEBUTTON_NAME_SIZE_Y		20

#define VOTEBUTTON_BORDER_SIZE		2

#define VOTEBUTTON_POS_X(pCollumn)	(VOTE_BACKGROUND_BORDER_SIZE + (VOTEBUTTON_IMAGE_SIZE_X + VOTEBUTTON_IMAGE_SPACE_X)*(pCollumn-1))
#define VOTEBUTTON_POS_Y(pRow)		(VOTE_BACKGROUND_BORDER_SIZE + (VOTEBUTTON_IMAGE_SIZE_Y + VOTEBUTTON_IMAGE_SPACE_Y)*(pRow-1))

#define VOTE_BACKGROUND \
	itemDef \
	{ \
		name                      "window_background_1" \
		style                     WINDOW_STYLE_FILLED \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		exp                       rect X ( 0 ) \
		exp                       rect Y ( 0 ) \
		exp                       rect W (VOTE_RECT_WIDTH) \
		exp                       rect H (VOTE_RECT_HEIGHT) \
		backColor                 0 0 0 0.8 \
		visible					  1 \
		decoration \
	}
	
#define TIME_LEFT		dvarInt(mapvote_votetime)
#define TIME_LEFT_DOT	(9-int((milliseconds()/100)%10))

#define VOTE_TIMER \
	itemDef \
	{ \
		name                      "timer_1_background" \
		style                     WINDOW_STYLE_FILLED \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		exp                       rect X ( 0 ) \
		exp                       rect Y ( 0 - (VOTE_TIMER_HEIGHT+2) ) \
		exp                       rect W (VOTE_RECT_WIDTH) \
		exp                       rect H (VOTE_TIMER_HEIGHT) \
		backColor                 0 0 0 0.8 \
		visible					  1 \
		decoration \
	} \
	itemDef \
	{ \
		name                      "timer_1" \
		type					  ITEM_TYPE_TEXT \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		exp                       rect X ( 0 ) \
		exp                       rect Y ( 0 - (VOTE_TIMER_HEIGHT+2) ) \
		exp                       rect W (VOTE_RECT_WIDTH) \
		exp                       rect H ( VOTE_TIMER_HEIGHT ) \
		foreColor                 1 1 1 1 \
		backColor                 0 0 0 0.8 \
		exp 					  text ( "Remaining Time: " + secondsAsCountdown(0) + ".0"); \
		textFont                  UI_FONT_NORMAL \
		textAlign                 ITEM_ALIGN_LEGACY_CENTER \
		textAlignY                24 \
		textScale                 0.375 \
		visible					  when(TIME_LEFT < 0) \
		decoration \
	} \
	itemDef \
	{ \
		name                      "timer_1" \
		type					  ITEM_TYPE_TEXT \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		exp                       rect X ( 0 ) \
		exp                       rect Y ( 0 - (VOTE_TIMER_HEIGHT+2) ) \
		exp                       rect W (VOTE_RECT_WIDTH) \
		exp                       rect H ( VOTE_TIMER_HEIGHT ) \
		foreColor                 1 1 1 1 \
		backColor                 0 0 0 0.8 \
		exp 					  text ( "Remaining Time: " + secondsAsCountdown(TIME_LEFT) + "." + TIME_LEFT_DOT ); \
		textFont                  UI_FONT_NORMAL \
		textAlign                 ITEM_ALIGN_LEGACY_CENTER \
		textAlignY                24 \
		textScale                 0.375 \
		visible					  when(TIME_LEFT >= 0) \
		decoration \
	}

#define VOTEBUTTON(pIndex, pRow, pCollumn, pResponse) \
	itemDef \ //map preview image
	{ \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_SHADER \
		border  	              0 \
		borderSize                1 \
		foreColor                 1 1 1 1 \
		backColor                 0 0 0 0 \
		borderColor               0 0 0 0 \
		outlineColor              0 0 0 0 \
		textScale                 0.55 \
		exp                       material ( ( "mapvote_loadscreen_" + ( pIndex-1 ) ) ); \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) ); \
		visible                   when( dvarint(mapvote_voteableItems) >= pIndex) \
		decoration \
	} \
	itemDef \ //gradient
	{ \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X 17.5 HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_SHADER \
		borderSize                1 \
		foreColor                 0 0 0 0.9 \
		backColor                 0 0 0 0 \
		borderColor               0 0 0 0 \
		outlineColor              0 0 0 0 \
		background                "gradient" \
		textScale                 0.55 \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) ); \
		visible                   when ( dvarint(mapvote_voteableItems) >= pIndex ) \
		decoration \
	} \
	itemDef \ //map name
	{ \
		rect                      0 0 VOTEBUTTON_NAME_SIZE_X VOTEBUTTON_NAME_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_FILLED \
		borderSize                1 \
		foreColor                 1 1 1 0.75 \
		backColor                 0 0 0 0.5 \
		borderColor               0 0 0 0 \
		outlineColor              0 0 0 0 \
		textFont                  UI_FONT_NORMAL \
		textAlign                 ITEM_ALIGN_BOTTOM_LEFT \
		textAlignX                4 \
		textAlignY                0 \
		textScale                 0.35 \
		textStyle                 ITEM_TEXTSTYLE_SHADOWED \
		exp                       text ( ( dvarstring( pResponse"_realname" ) ) ); \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) + (VOTEBUTTON_IMAGE_SIZE_Y - VOTEBUTTON_NAME_SIZE_Y) ); \
		visible                   when( dvarint(mapvote_voteableItems) >= pIndex) \     
		decoration \
	} \
	itemDef \ //display for amount of votes for this map
	{ \
		rect                      0 0 VOTEBUTTON_NAME_SIZE_X VOTEBUTTON_NAME_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_FILLED \
		borderSize                1 \
		foreColor                 1 1 1 0.75 \
		backColor                 0 0 0 0.5 \
		borderColor               0 0 0 0 \
		outlineColor              0 0 0 0 \
		textFont                  UI_FONT_NORMAL \
		textAlign                 ITEM_ALIGN_BOTTOM_RIGHT \
		textAlignX                -4 \
		textAlignY                0 \
		textScale                 0.35 \
		textStyle                 ITEM_TEXTSTYLE_SHADOWED \
		exp                       text ( ( dvarint( "votes_"pResponse ) ) ); \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) + VOTEBUTTON_NAME_SIZE_X ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) + (VOTEBUTTON_IMAGE_SIZE_Y - VOTEBUTTON_NAME_SIZE_Y) ); \
		visible                   when( dvarint(mapvote_voteableItems) >= pIndex) \
		decoration \
	} \
	itemDef \ //mark what did I vote for
	{ \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_SHADER \
		border  	              1 \
		borderSize                VOTEBUTTON_BORDER_SIZE \
		foreColor                 0 0 0 0 \
		backColor                 0 0 0 0 \
		borderColor               0.45 0 0 0.5 \
		outlineColor              0 0 0 0 \
		textScale                 0.55 \
		exp                       material ( "black" ); \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) ); \
		visible                   when ( ( dvarint( "selected_map" ) == pIndex && dvarint(mapvote_voteableItems) >= pIndex ) ) \ \
		decoration \
	} \
	itemDef \ //mark the map with the most votes
	{ \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_SHADER \
		border  	              1 \
		borderSize                VOTEBUTTON_BORDER_SIZE \
		foreColor                 0 0 0 0 \
		backColor                 0 0 0 0 \
		borderColor               0 0.45 0 0.5 \
		outlineColor              0 0 0 0 \
		textScale                 0.55 \
		exp                       material ( "black" ); \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) ); \
		visible                   when ( dvarint(mapvote_winner) == pIndex ) \ \
		decoration \
	} \
	itemDef \ //vote button to cast a vote
	{ \
		rect                      0 0 VOTEBUTTON_IMAGE_SIZE_X VOTEBUTTON_IMAGE_SIZE_Y HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP \
		style                     WINDOW_STYLE_FILLED \
		borderSize                1 \
		foreColor                 1 1 1 1 \
		backColor                 0 0 0 0 \
		borderColor               0 0 0 0 \
		outlineColor              0 0 0 0 \
		type                      ITEM_TYPE_BUTTON \
		textFont                  UI_FONT_NORMAL \
		textAlign                 ITEM_ALIGN_LEGACY_CENTER \
		textAlignY                24 \
		textScale                 0.375 \
		text                      "" \
		exp                       rect X ( VOTEBUTTON_POS_X(pCollumn) ); \
		exp                       rect Y ( VOTEBUTTON_POS_Y(pRow) ); \
		mouseEnter                { play mouse_over ;  } \
		action                    { scriptmenuresponse pResponse; setDvar selected_map pIndex; } \
		visible                   when( dvarint(mapvote_voteableItems) >= pIndex) \
	}
	
{
	// ANIMATION
	#define POPUP_MOVE_SPEED		600 	//milliseconds
	#define ANIMATE_DISTANCE		800		//units
	
	#define ZERO_TO_ONE				milliseconds()-dvarInt(menuOpenTime)
	#define UNIT_GROWTH				sin( sin( min( ZERO_TO_ONE, POPUP_MOVE_SPEED )*(1.5707/POPUP_MOVE_SPEED) )*1.5707 )
    
	#define FRAME_ANIMATE(offset)	(offset-offset*UNIT_GROWTH)
	
	menuDef
    {
		name						"votemap"
		rect						0 0 VOTE_RECT_WIDTH_MAX VOTE_RECT_HEIGHT_MAX HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		exp							rect X (VOTE_RECT_START_X - VOTE_RECT_WIDTH/2 + FRAME_ANIMATE(ANIMATE_DISTANCE))
		exp							rect Y (VOTE_RECT_START_Y - VOTE_RECT_HEIGHT/2)
		foreColor					1 1 1 1
		backColor					0 0 0 0
		borderColor					0 0 0 0
		outlineColor				0 0 0 0
		blurWorld					7
		focusColor					0 0 0 0
		disableColor				0 0 0 0
		visible						0                 
        onOpen
		{
			//import the values from precompiled config
			exec "exec dynamic_mapvote.cfg"
		
			//animation start marker
			exec "setdvartotime menuOpenTime";
			
			//reset the players last vote
			exec "set selected_map 0";
			
			//correct frame size
			//width
			execondvarintvalue mapvote_voteableItems 0 "set mapvote_columns 1";
			execondvarintvalue mapvote_voteableItems 1 "set mapvote_columns 1";
			execondvarintvalue mapvote_voteableItems 2 "set mapvote_columns 2";
			execondvarintvalue mapvote_voteableItems 3 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 4 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 5 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 6 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 7 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 8 "set mapvote_columns 3";
			execondvarintvalue mapvote_voteableItems 9 "set mapvote_columns 3";
			//height
			execondvarintvalue mapvote_voteableItems 0 "set mapvote_rows 1";
			execondvarintvalue mapvote_voteableItems 1 "set mapvote_rows 1";
			execondvarintvalue mapvote_voteableItems 2 "set mapvote_rows 1";
			execondvarintvalue mapvote_voteableItems 3 "set mapvote_rows 1";
			execondvarintvalue mapvote_voteableItems 4 "set mapvote_rows 2";
			execondvarintvalue mapvote_voteableItems 5 "set mapvote_rows 2";
			execondvarintvalue mapvote_voteableItems 6 "set mapvote_rows 2";
			execondvarintvalue mapvote_voteableItems 7 "set mapvote_rows 3";
			execondvarintvalue mapvote_voteableItems 8 "set mapvote_rows 3";
			execondvarintvalue mapvote_voteableItems 9 "set mapvote_rows 3";
			
			setDvar cl_bypassmouseinput 0;
		}
        onClose
		{
			setDvar cl_bypassmouseinput 0;
		}
        onESC
		{
		}
		
		// Background & Timer
		VOTE_TIMER
		VOTE_BACKGROUND
		
		//Vote Buttons
		VOTEBUTTON(1, 1, 1, "mapvote_map0")
		VOTEBUTTON(2, 1, 2, "mapvote_map1")
		VOTEBUTTON(3, 1, 3, "mapvote_map2")
		VOTEBUTTON(4, 2, 1, "mapvote_map3")
		VOTEBUTTON(5, 2, 2, "mapvote_map4")
		VOTEBUTTON(6, 2, 3, "mapvote_map5")
		VOTEBUTTON(7, 3, 1, "mapvote_map6")
		VOTEBUTTON(8, 3, 2, "mapvote_map7")
		VOTEBUTTON(9, 3, 3, "mapvote_map8")
    }
}
